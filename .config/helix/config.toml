theme = "monokai_pro"

[editor]
line-number = "relative"
mouse = true
cursorline = true
true-color = true
rulers = [80]
color-modes = true
completion-timeout = 15
bufferline = "multiple"
jump-label-alphabet = "jfkdls;aurieowpqnvmcxz"
default-yank-register = '+'

# end-of-line-diagnostics="hint"


# [editor.inline-diagnostics]
# cursor-line = "error"
# other-lines = "warning"
# max-diagnostics = 2

[editor.statusline]
left = ["mode", "spinner", "file-name"]
right = ["diagnostics", "separator", "workspace-diagnostics", "selections", "position"]
separator = "â”‚"
mode.normal = "NOR"
mode.insert = "INS"
mode.select = "SEL"

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.indent-guides]
render = true

[editor.soft-wrap]
enable = true

[editor.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'

[editor.lsp]
# Disable automatically popups of signature parameter help
auto-signature-help = false
# Show LSP messages in the status line
display-messages = true
display-inlay-hints = true

[editor.smart-tab]
supersede-menu = true
#####################################
# Keys
[keys.insert]
"C-[" = "normal_mode"
C-h = "signature_help"

[keys.normal]
- = "@zt k"
# "C-p" = "@:lsp-workspace-command "
"C-p" = "@:sh "
"C-r" = "@:rl"
"ret" = "goto_word"
C-j     = "page_down"
C-k     = ["page_up", "goto_window_top"]
"]" = {f = ["goto_next_function", "flip_selections", "collapse_selection"], F=["goto_next_function", "flip_selections"]}
"[" = {f = ["goto_prev_function", "collapse_selection"], F=["goto_prev_function", "flip_selections"]}

C-y = [
  ':sh rm -f /tmp/unique-file',
  ':insert-output yazi %{buffer_name} --chooser-file=/tmp/unique-file',
  ':insert-output echo "\x1b[?1049h\x1b[?2004h" > /dev/tty',
  ':open %sh{cat /tmp/unique-file}',
  ':redraw',
]
C-g = [
    ":write-all",
    ":new",
    ":insert-output lazygit",
    ":buffer-close!",
    ":redraw",
    ":reload-all"
]

[keys.normal.g]
a = "code_action" # Maps `ga` to show possible code actions

[keys.normal.backspace]
y = ":yank-diagnostic"
backspace = "suspend"

[keys.normal."space".b]
f = "buffer_picker"
q = ":buffer-close"
p = ":buffer-previous"
n = ":buffer-next"

[keys.select]
"g" = { "e" = "goto_file_end" }
